FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = SM;

(* input parameters *)

MINPAR = {};

EXTPAR = {
    {0, MSUSY},
    {1, M1Input},
    {2, M2Input},
    {3, M3Input},
    {4, MuInput},
    {5, mAInput},
    {6, MEWSB},
    {7, AtInput},
    {25, TanBeta}
};

FSExtraInputParameters = {
    {msq2, MSQ2IN, {3,3}}, (* 3x3 matrix *)
    {msu2, MSU2IN, {3,3}}, (* 3x3 matrix *)
    {msd2, MSD2IN, {3,3}}, (* 3x3 matrix *)
    {msl2, MSL2IN, {3,3}}, (* 3x3 matrix *)
    {mse2, MSE2IN, {3,3}}  (* 3x3 matrix *)
};

EWSBOutputParameters = { mu2 };

(* The high scale where we match to the MSSM *)
HighScale = MSUSY;

HighScaleFirstGuess = MSUSY;

HighScaleInput = {
    {\[Lambda], lambdaTree
                + UnitStep[THRESHOLD-1] (lambda1LReg + lambda1LPhi
                                         + lambda1LChi1 + lambda1LChi2
                                         + lambda1Lbottom + lambda1Ltau)
                + UnitStep[THRESHOLD-2] (
                    If[IsCloseRel[SCALE^2,msq2[3,3],0.01] &&
                       IsCloseRel[SCALE^2,msu2[3,3],0.01] &&
                       IsCloseRel[SCALE,M3Input,0.01],
                       lambda2LPhiHSSAlphaTAlphaSDegenerate,
                       lambda2LPhiHSSAlphaTAlphaSFull]
                    + lambda2LHSSAlphaT2) }
};

(* The scale where we impose the EWSB conditions
   and calculate the spectrum *)
SUSYScale = MEWSB;

SUSYScaleFirstGuess = MEWSB;

SUSYScaleInput = {};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

LowScaleInput = {
   {v, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2]},
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic}
};

InitialGuessAtLowScale = {
   {v, LowEnergyConstant[vev]},
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic}
};

DefaultPoleMassPrecision = MediumPrecision;
HighPoleMassPrecision    = {hh};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

SMParticles = {
    Electron, TopQuark, BottomQuark,
    VectorP, VectorZ, VectorG, VectorW, Neutrino,
    Hp, Ah, (* goldstones *)
    hh (* Higgs *)
};

OnlyLowEnergyFlexibleSUSY = False;
UseHiggs2LoopSM = True;

SARAH`ParameterDefinitions = Append[
    Cases[SARAH`ParameterDefinitions, {p_ /; p =!= SARAH`\[Lambda], ___}],
    {SARAH`\[Lambda], { Description -> "SM Higgs Selfcouplings" } }
];

(*** High-scale MSSM boundary conditions to the MSSM ***)
(* Taken from arXiv:1407.4081 *)

(* abbreviations *)
xQU = Sqrt[Abs[msq2[3,3]/msu2[3,3]]];
At = AtInput;
xt = At - MuInput/TanBeta;
xtt = xt^2/Sqrt[Abs[msq2[3,3] msu2[3,3]]];

(* arXiv:1407.4081, Eq. (5) *)
gYu = Sqrt[3/5] g1 Sin[ArcTan[TanBeta]];
gYd = Sqrt[3/5] g1 Cos[ArcTan[TanBeta]];
g2u = g2 Sin[ArcTan[TanBeta]];
g2d = g2 Cos[ArcTan[TanBeta]];

(* arXiv:1407.4081, Eq. (3) *)
lambdaTree = 1/4 (g2^2 + 3/5 g1^2) Cos[2 ArcTan[TanBeta]]^2;

(* arXiv:1407.4081, Eq. (9) *)
lambda1LReg = 1/(4 Pi)^2 (
    - 0.09 g1^4 - 0.3 g1^2 g2^2
    - (0.75 - Cos[2 ArcTan[TanBeta]]^2/6) * g2^4
    );

(* arXiv:1407.4081, Eq. (10) *)
lambda1LPhi = 1/(4 Pi)^2 (
    3 Yu[3,3]^2 (Yu[3,3]^2 + 0.5 (g2^2-g1^2/5) Cos[2 ArcTan[TanBeta]]) Log[msq2[3,3]/SCALE^2]
    + 3 Yu[3,3]^2 (Yu[3,3]^2 + 0.4 g1^2 Cos[2 ArcTan[TanBeta]]) Log[msu2[3,3]/SCALE^2]
    + Cos[2 ArcTan[TanBeta]]^2/300 (
        3 (g1^4 + 25 g2^4) (
            + Log[msq2[1,1]/SCALE^2]
            + Log[msq2[2,2]/SCALE^2]
            + Log[msq2[3,3]/SCALE^2]
        )
        + 24 g1^4 (
            + Log[msu2[1,1]/SCALE^2]
            + Log[msu2[2,2]/SCALE^2]
            + Log[msu2[3,3]/SCALE^2]
        )
        + 6 g1^4 (
            + Log[msd2[1,1]/SCALE^2]
            + Log[msd2[2,2]/SCALE^2]
            + Log[msd2[3,3]/SCALE^2]
        )
        + (9 g1^4 + 25 g2^4) (
            + Log[msl2[1,1]/SCALE^2]
            + Log[msl2[2,2]/SCALE^2]
            + Log[msl2[3,3]/SCALE^2]
        )
        + 18 g1^4 (
            + Log[mse2[1,1]/SCALE^2]
            + Log[mse2[2,2]/SCALE^2]
            + Log[mse2[3,3]/SCALE^2]
        )
    )
    + 1/4800 (261 g1^4 + 630 g1^2 g2^2 + 1325 g2^4
              -4 Cos[4 ArcTan[TanBeta]] (9 g1^4 + 90 g1^2 g2^2 + 175 g2^4)
              -9 Cos[8 ArcTan[TanBeta]] (3 g1^2 + 5 g2^2)^2) Log[mAInput^2/SCALE^2]
    - 3/16 (3/5 g1^2 + g2^2)^2 Sin[4 ArcTan[TanBeta]]^2
    + 6 Yu[3,3]^4 xtt (TCF[1][xQU] - xtt/12 TCF[2][xQU])
    + 3/4 Yu[3,3]^2 xtt Cos[2 ArcTan[TanBeta]] (3/5 g1^2 TCF[3][xQU] + g2^2 TCF[4][xQU])
    - 0.25 Yu[3,3]^2 xtt Cos[2 ArcTan[TanBeta]]^2 (3/5 g1^2 + g2^2) TCF[5][xQU]
    );

(* arXiv:1407.4081, Eq. (11) *)
lambda1LChi1 = With[
    { r1 = M1Input / MuInput, r2 = M2Input / MuInput },
    1/(4 Pi)^2 (
        1/2 betaLambda Log[MuInput^2/SCALE^2]
        - 7/12 TCf[1][r1] (gYd^4 + gYu^4)
        - 9/4 TCf[2][r2] (g2d^4 + g2u^4)
        - 3/2 TCf[3][r1] gYd^2 gYu^2
        - 7/2 TCf[4][r2] g2d^2 g2u^2
        - 8/3 TCf[5][r1,r2] gYd gYu g2d g2u
        - 7/6 TCf[6][r1,r2] (gYd^2 g2d^2 + gYu^2 g2u^2)
        - 1/6 TCf[7][r1,r2] (gYd^2 g2u^2 + gYu^2 g2d^2)
        - 4/3 TCf[8][r1,r2] (gYd g2u + gYu g2d) (gYd g2d + gYu g2u)
        + 2/3 TCf0[r1] gYd gYu (lambdaTree - 2 (gYd^2 + gYu^2))
        + 2 TCf0[r2] g2d g2u (lambdaTree - 2 (g2d^2 + g2u^2))
        + 1/3 TCg0[r1] lambdaTree (gYd^2 + gYu^2)
        + TCg0[r2] lambdaTree (g2d^2 + g2u^2)
    )
];

(* arXiv:1407.4081, Eq. (13) *)
lambda1LChi2 = 1/(4 Pi)^2 (
    -1/6 Cos[2 ArcTan[TanBeta]]^2 (
        + 2 g2^4 Log[M2Input^2/SCALE^2]
        + (9/25 g1^4 + g2^4) Log[MuInput^2/SCALE^2]
    )
);

(* lambda 1-loop threshold correction O(alpha_b),
   taken from SUSYHD 1.0.2, arxiv:1504.05200 *)
lambda1Lbottom = With[{
    mQ3 = Sqrt[msq2[2,2]],
    mU3 = Sqrt[msu2[2,2]],
    mD3 = Sqrt[msd2[2,2]],
    M3 = M3Input,
    Mu = MuInput,
    Xt = xt,
    gb = Yd[3,3], (* SM Yukawa coupling *)
    gt = Yu[3,3] (* SM Yukawa coupling *)
    },
    gbDR[mQ3_,mU3_,mD3_,M3_,Mu_,TanBeta_,Xt_] := (
        gb/Cos[ArcTan[TanBeta]] (
            1 - (-(8/3) M3 TanBeta Mu II[mQ3,mD3,M3] g3^2
                 - ((1+TanBeta^2) Xt Mu II[mQ3,mU3,Mu] gt^2)/TanBeta)/(16 Pi^2))^-1
    );

    (
        6/(16 Pi^2) (
            gbDR[mQ3,mU3,mD3,M3,Mu,TanBeta,Xt] Cos[ArcTan[TanBeta]])^4 (TanBeta^2 Mu^2)/(mD3 mQ3) (
                TCF[1][mQ3/mD3] - (TanBeta^2 Mu^2 TCF[2][mQ3/mD3])/(12 mD3 mQ3))
    ) /. II[a_,b_,c_] :> TCIabc[a,b,c]
    ];

(* lambda 1-loop threshold correction O(alpha_tau),
   taken from SUSYHD 1.0.2, arxiv:1504.05200 *)
lambda1Ltau = With[{
    mL3 = Sqrt[msl2[2,2]],
    mE3 = Sqrt[mse2[2,2]],
    M1 = M1Input,
    M2 = M2Input,
    Mu = MuInput,
    gtau = Ye[3,3] (* SM Yukawa coupling *)
    },
    gtauDR[mL3_,mE3_,M2_,M1_,Mu_,TanBeta_] := (
        gtau/Cos[ArcTan[TanBeta]] (
            1 - 1/(4Pi)^2 TanBeta (
                g2^2 M2 Mu (II[mL3,M2,Mu]+1/2 II[mL3,M2,Mu])
                - 3/5 g1^2 M1 (-Mu II[mL3,mE3,M1] + 1/2 Mu II[mL3,M1,Mu] - Mu II[mE3,M1,Mu])))^-1
    );

    (
        (2/(16Pi^2))(
            gtauDR[mL3,mE3,M2,M1,Mu,TanBeta] Cos[ArcTan[TanBeta]])^4 (TanBeta^2 Mu^2)/(mL3 mE3) (
                TCF[1][mL3/mE3] - (TanBeta^2 Mu^2 TCF[2][mL3/mE3])/(12 mL3 mE3))
    ) /. II[a_,b_,c_] :> TCIabc[a,b,c]
    ];

(* lambda 2-loop threshold correction O(alpha_s alpha_t^2),
   arXiv:1407.4081, Eq. (36)
   Valid in the limit M3 = MQ[3,3] = MU[3,3] = MSUSY *)
lambda2LPhiHSSAlphaTAlphaSDegenerate = With[{ r = xt / SCALE },
    (g3^2 Yu[3,3]^4)/(96 Pi^4) (
        -12 r - 6 r^2 + 14 r^3 + 1/2 r^4 - r^5
    )
];

(* lambda 2-loop threshold correction O(alpha_s alpha_t^2),
   arXiv:1407.4081, provided by Pietro Slavich,
   General expression. *)
lambda2LPhiHSSAlphaTAlphaSFull = With[{
    htSM = Yu[3,3] Sin[ArcTan[TanBeta]],
    CF = 4/3,
    Nc = 3,
    as = g3^2 / (4 Pi),
    g = M3Input^2,
    x1 = msq2[3,3]/M3Input^2,
    x2 = msu2[3,3]/M3Input^2,
    q2 = SCALE^2,
    Xt = xt / M3Input
    },
    htSM^4*as*CF*Nc/(4*Pi)^3 (
       -12*Log[g/q2]^2 + ((-6 + 8*x1 - 4*x1^2)*Log[x1]^2)/(-1 + x1)^2 +
        Log[g/q2]*(8 - 4/x1 - 4/x2 - 12*Log[x1] - 12*Log[x2]) +
        (2*(-7 + 7*x2 - 3*x2^2 + x1*(6 - 5*x2 + 2*x2^2))*Log[x2])/
         ((-1 + x1)*(-1 + x2)^2) + ((-6 + 8*x2 - 4*x2^2)*Log[x2]^2)/(-1 + x2)^2 +
        Log[x1]*((2*(-7 + x1*(7 - 5*x2) + 6*x2 + x1^2*(-3 + 2*x2)))/
           ((-1 + x1)^2*(-1 + x2)) - (2*((-2 + x2)*x2 + x1*(-2 + 8*x2 - 4*x2^2) +
             x1^2*(1 - 4*x2 + 2*x2^2))*Log[x2])/((-1 + x1)^2*(-1 + x2)^2)) +
        Xt^2*(-8/(x1*x2) - (4*(4*x1^3 - x2 - 2*x1^2*(4 + x2) + x1*(3 + 4*x2))*
            Log[x1]^2)/((-1 + x1)^2*(x1 - x2)^2) -
          (4*(7 + 3*x1*(-2 + x2) - 4*x2)*Log[x2])/((-1 + x1)*(x1 - x2)*(-1 + x2)) +
          (4*(x2*(-3 + 8*x2 - 4*x2^2) + x1*(1 - 4*x2 + 2*x2^2))*Log[x2]^2)/
           ((x1 - x2)^2*(-1 + x2)^2) + Log[g/q2]*(8/(x1*x2) -
            (24*Log[x1])/(x1 - x2) + (24*Log[x2])/(x1 - x2)) +
          Log[x1]*((4*(7 - 6*x2 + x1*(-4 + 3*x2)))/((-1 + x1)*(x1 - x2)*(-1 + x2)) +
            (4*(((-2 + x1)*x1*(x1 - x2))/(-1 + x1)^2 + ((-2 + x2)*x2*(-x1 + x2))/
                (-1 + x2)^2 + 2*(x1 + x2))*Log[x2])/(x1 - x2)^2)) +
        Xt^5*((-8*x1*(x1 + x2)*Log[x1]^2)/((-1 + x1)*(x1 - x2)^4) +
          (16*x2*Log[x2])/((-1 + x2)*(-x1 + x2)^3) - (8*x2*(x1 + x2)*Log[x2]^2)/
           ((x1 - x2)^4*(-1 + x2)) + Log[x1]*((16*x1)/((-1 + x1)*(x1 - x2)^3) +
            (8*(x1 + x2)*(-x2 + x1*(-1 + 2*x2))*Log[x2])/((-1 + x1)*(x1 - x2)^4*
              (-1 + x2)))) + Xt*((8*(-2 + x1)*Log[x1]^2)/((-1 + x1)*(x1 - x2)) +
          (16*Log[x2])/(x1 - x2) - (8*(-2 + x2)*Log[x2]^2)/((x1 - x2)*(-1 + x2)) +
          Log[g/q2]*((16*Log[x1])/(x1 - x2) - (16*Log[x2])/(x1 - x2)) +
          Log[x1]*(-16/(x1 - x2) - (8*Log[x2])/((-1 + x1)*(-1 + x2))) +
          (32*(-((-1 + x2)*PolyLog[2, (-1 + x1)/x1]) +
             (-1 + x1)*PolyLog[2, (-1 + x2)/x2]))/((-1 + x1)*(x1 - x2)*(-1 + x2))) -
        (2*(4*x1*(-1 + x2)^2*x2*PolyLog[2, (-1 + x1)/x1] +
           (-1 + x1)*((-1 + x2)*(2*(-1 + x2)*x2 + x1*(-2 + 9*x2 - 6*x2^2) +
               x1^2*(2 - 6*x2 + 3*x2^2)) + 4*(-1 + x1)*x1*x2*
              PolyLog[2, (-1 + x2)/x2])))/((-1 + x1)^2*x1*(-1 + x2)^2*x2) +
        Xt^3*((8*(-2 + x1^2 - 3*x1*(-1 + x2) + x2)*Log[x1]^2)/
           ((-1 + x1)*(x1 - x2)^3) - (16*(x1 + 3*x2)*Log[x2])/(x1 - x2)^3 +
          (8*(-2 + x1 + 3*x2 - 3*x1*x2 + x2^2)*Log[x2]^2)/((-1 + x2)*(-x1 + x2)^3) +
          Log[g/q2]*(32/(x1 - x2)^2 - (16*(x1 + x2)*Log[x1])/(x1 - x2)^3 +
            (16*(x1 + x2)*Log[x2])/(x1 - x2)^3) +
          Log[x1]*((16*(3*x1 + x2))/(x1 - x2)^3 + (16*(x1 + x2 - 2*x1*x2)*Log[x2])/
             ((-1 + x1)*(x1 - x2)^2*(-1 + x2))) -
          (16*(4*(x1 - x2) + (-2 + x1 + x2)*PolyLog[2, (-1 + x1)/x1] -
             (-2 + x1 + x2)*PolyLog[2, (-1 + x2)/x2]))/(x1 - x2)^3) +
        Xt^4*((2*(5*x1^4 + 4*x1^3*(-2 + x2) - 2*x2 - x1^2*x2*(10 + x2) +
             2*x1*(1 + 4*x2 + x2^2))*Log[x1]^2)/((-1 + x1)^2*(x1 - x2)^4) +
          (2*(-4 - 7*x2 + 29*x2^2 - 16*x2^3 + x1^2*(6 - 7*x2 + 3*x2^2) +
             x1*(-3 + 15*x2 - 31*x2^2 + 15*x2^3))*Log[x2])/
           ((-1 + x1)*(x1 - x2)^3*(-1 + x2)^2) -
          (2*(-2*x2 + x1^2*(-2 + x2)*x2 + 8*x2^3 - 5*x2^4 -
             2*x1*(-1 + x2)^2*(-1 + 2*x2))*Log[x2]^2)/((x1 - x2)^4*(-1 + x2)^2) +
          Log[g/q2]*((-4*(x1 + x2 + 6*x1*x2))/(x1*(x1 - x2)^2*x2) +
            (4*(2 + 3*x1 + 3*x2)*Log[x1])/(x1 - x2)^3 -
            (4*(2 + 3*x1 + 3*x2)*Log[x2])/(x1 - x2)^3) +
          Log[x1]*((2*(4 + x1^3*(16 - 15*x2) + 3*x2 - 6*x2^2 +
               x1^2*(-29 + 31*x2 - 3*x2^2) + x1*(7 - 15*x2 + 7*x2^2)))/
             ((-1 + x1)^2*(x1 - x2)^3*(-1 + x2)) +
            (2*(-4*x1^2 - 8*x1*x2 - 4*x2^2 - ((-2 + x1)*x1*(x1 - x2)*(x1 + x2))/
                (-1 + x1)^2 - ((-2 + x2)*x2*(-x1 + x2)*(x1 + x2))/(-1 + x2)^2)*
              Log[x2])/(x1 - x2)^4) -
          (4*(-x1^2 + x1^3 - 6*x1^2*x2 + 5*x1^3*x2 + x2^2 + 6*x1*x2^2 -
             5*x1^3*x2^2 - x2^3 - 5*x1*x2^3 + 5*x1^2*x2^3 +
             (-1 + x1)*x1*(-1 + x2)*x2*(-2 + x1 + x2)*PolyLog[2, (-1 + x1)/x1] -
             (-1 + x1)*x1*(-1 + x2)*x2*(-2 + x1 + x2)*PolyLog[2, (-1 + x2)/x2]))/
           ((-1 + x1)*x1*(x1 - x2)^3*(-1 + x2)*x2))
    )
];

(* arXiv:1407.4081, Eq. (12) *)
betaLambda = (
    2 lambdaTree (gYd^2 + gYu^2 + 3 g2d^2 + 3 g2u^2)
    - gYd^4 - gYu^4 - 5 g2d^4 - 5 g2u^4
    - 4 gYd gYu g2d g2u
    - 2 (gYd^2 + g2u^2) (gYu^2 + g2d^2)
);

(* lambda 2-loop threshold correction O(alpha_t^2),
   arxiv:1504.05200, Eq. (21) *)
lambda2LHSSAlphaT2 = With[{
    tan\[Beta] = TanBeta,
    mst = Sqrt[msq2[2,2]], (* average stop mass *)
    Q = SCALE,
    \[Mu] = MuInput,
    K = -0.1953256,
    Xt = xt,
    gt = Yu[3,3] (* SM Yukawa coupling *)
    },
(3*(1 + tan\[Beta]^2)*(1/2 - 8.34993159891064/(1 + tan\[Beta]^2) +
   (6*\[Mu]^2)/mst^2 +
   (Xt^6*(-1/2 + (1/2 - Log[mst^2/Q^2]/2)/(1 + tan\[Beta]^2) +
      Log[mst^2/Q^2]/2))/mst^6 - 4*Log[mst^2/Q^2] +
   (13*Log[mst^2/Q^2])/(1 + tan\[Beta]^2) - (6*\[Mu]^2*Log[mst^2/Q^2])/
    mst^2 + 3*Log[mst^2/Q^2]^2 - (3*Log[mst^2/Q^2]^2)/(1 + tan\[Beta]^2) +
   (Xt^3*(Xt/mst + (2*\[Mu]*Csc[2*ArcTan[tan\[Beta]]])/mst)*
     (0.8747904000000002/(1 + tan\[Beta]^2) - (2*Log[mst^2/Q^2])/
       (1 + tan\[Beta]^2)))/mst^3 +
   (Xt/mst + (2*\[Mu]*Csc[2*ArcTan[tan\[Beta]]])/mst)^2*
    (0.1252095999999998/(1 + tan\[Beta]^2) + (3*Log[mst^2/Q^2])/
      (1 + tan\[Beta]^2)) +
   (Xt*(Xt/mst + (2*\[Mu]*Csc[2*ArcTan[tan\[Beta]]])/mst)*
     (0.5008383999999992/(1 + tan\[Beta]^2) + (12*Log[mst^2/Q^2])/
       (1 + tan\[Beta]^2)))/mst +
   4*Piecewise[{{-9/4, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
     Re[((-1 + (2*\[Mu]^2)/mst^2 + (2*\[Mu]^4)/mst^4)*
        (-Pi^2/6 - (\[Mu]^2*Log[\[Mu]^2/mst^2])/mst^2 + Log[\[Mu]^2/mst^2]*
          Log[Abs[1 - \[Mu]^2/mst^2]] + PolyLog[2, \[Mu]^2/mst^2]))/
       Abs[(1 - \[Mu]^2/mst^2)^2]]] -
   8*Piecewise[{{-1, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
     (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2))] -
   (2*\[Mu]^2*Piecewise[{{-1, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
      (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2))])/mst^2 +
   (3*\[Mu]^2*Piecewise[{{1/2, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
      (1 + (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2)))/
       (1 - \[Mu]^2/mst^2)])/mst^2 +
   (Xt^2*(-7 + 19.6878144/(1 + tan\[Beta]^2) - (6*\[Mu]^2)/mst^2 +
      27*Log[mst^2/Q^2] - (24*Log[mst^2/Q^2])/(1 + tan\[Beta]^2) +
      (6*\[Mu]^2*Log[mst^2/Q^2])/mst^2 +
      (Xt/mst + (2*\[Mu]*Csc[2*ArcTan[tan\[Beta]]])/mst)^2*
       (-0.021147733333332752/(1 + tan\[Beta]^2) - (3*Log[mst^2/Q^2])/
         (1 + tan\[Beta]^2)) +
      4*Piecewise[{{-1, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
        (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2))] -
      (6*\[Mu]^2*Piecewise[{{-1, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
         (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2))])/mst^2 -
      4*Piecewise[{{1/2, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
        (1 + (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2)))/
         (1 - \[Mu]^2/mst^2)] -
      (6*\[Mu]^2*Piecewise[{{1/2, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
         (1 + (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2)))/
          (1 - \[Mu]^2/mst^2)])/mst^2))/mst^2 +
   (Xt^4*(11/2 - 25/(4*(1 + tan\[Beta]^2)) + \[Mu]^2/mst^2 -
      (13*Log[mst^2/Q^2])/2 + (6*Log[mst^2/Q^2])/(1 + tan\[Beta]^2) -
      (\[Mu]^2*Log[mst^2/Q^2])/mst^2 +
      (Xt/mst + (2*\[Mu]*Csc[2*ArcTan[tan\[Beta]]])/mst)^2*
       (-0.020728533333333354/(1 + tan\[Beta]^2) + Log[mst^2/Q^2]/
         (2*(1 + tan\[Beta]^2))) -
      Piecewise[{{-1, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
        (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2))]/2 +
      (\[Mu]^2*Piecewise[{{-1, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
         (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2))])/mst^2 +
      Piecewise[{{1/2, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
        (1 + (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2)))/
         (1 - \[Mu]^2/mst^2)]/2 +
      (\[Mu]^2*Piecewise[{{1/2, Abs[-1 + \[Mu]^2/mst^2] < 1/100000}},
         (1 + (\[Mu]^2*Log[\[Mu]^2/mst^2])/(mst^2*(1 - \[Mu]^2/mst^2)))/
          (1 - \[Mu]^2/mst^2)])/(2*mst^2)))/mst^4)*gt^6)/
    (256*Pi^4*tan\[Beta]^2)
    /. Piecewise[{{val_, cond_}}, default_] :> If[cond, val, default]
    ];
