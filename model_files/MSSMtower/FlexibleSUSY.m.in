FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = MSSM;
OnlyLowEnergyFlexibleSUSY = True;
FlexibleEFTHiggs = True;

MINPAR = {
    {4, Sign[\[Mu]]}
};

EXTPAR = {
    {0, Ms},
    {14, Xtt},
    {25, TanBeta}
};

EWSBOutputParameters = { mHd2, mHu2 };

SUSYScale = Ms;

SUSYScaleFirstGuess = Ms;

SUSYScaleInput = {
    {MassB, Ms},
    {MassWB, Ms},
    {MassG, Ms},
    {mq2, UNITMATRIX[3] Ms^2},
    {mu2, UNITMATRIX[3] Ms^2},
    {md2, UNITMATRIX[3] Ms^2},
    {ml2, UNITMATRIX[3] Ms^2},
    {me2, UNITMATRIX[3] Ms^2},
    {\[Mu], Ms},
    {B[\[Mu]], Sqr[Ms]/(TanBeta + 1/TanBeta)},
    {T[Yu], Ms/TanBeta Yu},
    {T[Yd], Ms TanBeta Yd},
    {T[Ye], Ms TanBeta Ye},
    {T[Yu][3,3], (Ms/TanBeta + Xtt Ms) Yu[3,3]}
};

InitialGuessAtSUSYScale = {
    {Yu, Automatic},
    {Yd, Automatic},
    {Ye, Automatic}
    {MassB, Ms},
    {MassWB, Ms},
    {MassG, Ms},
    {mq2, UNITMATRIX[3] Ms^2},
    {mu2, UNITMATRIX[3] Ms^2},
    {md2, UNITMATRIX[3] Ms^2},
    {ml2, UNITMATRIX[3] Ms^2},
    {me2, UNITMATRIX[3] Ms^2},
    {\[Mu], Ms},
    {B[\[Mu]], Sqr[Ms]/(TanBeta + 1/TanBeta)},
    {T[Yu], Ms/TanBeta Yu},
    {T[Yd], Ms TanBeta Yd},
    {T[Ye], Ms TanBeta Ye},
    {T[Yu][3,3], (Ms/TanBeta + Xtt Ms) Yu[3,3]}
};

(* VEV is the SM-like VEV in the MSSM *)
SUSYScaleMatching = {
    {vu, VEV Sin[ArcTan[TanBeta]]},
    {vd, VEV Cos[ArcTan[TanBeta]]}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];


UseHiggs2LoopMSSM = True;
EffectiveMu = \[Mu];

PotentialLSPParticles = { Chi, Sv, Su, Sd, Se, Cha, Glu };

DefaultPoleMassPrecision = HighPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput,
           {{0, Hold[HighScale]},
            {1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } },
   {ALPHA, {{ArcSin[Pole[ZH[2,2]]]}}},
   {HMIX , {{1, \[Mu]},
            {2, vu / vd},
            {3, Sqrt[vu^2 + vd^2]},
            {4, M[Ah[2]]^2},
            {101, B[\[Mu]]},
            {102, vd},
            {103, vu} } },
   {Au,    {{1, 1, T[Yu][1,1] / Yu[1,1]},
            {2, 2, T[Yu][2,2] / Yu[2,2]},
            {3, 3, T[Yu][3,3] / Yu[3,3]} } },
   {Ad,    {{1, 1, T[Yd][1,1] / Yd[1,1]},
            {2, 2, T[Yd][2,2] / Yd[2,2]},
            {3, 3, T[Yd][3,3] / Yd[3,3]} } },
   {Ae,    {{1, 1, T[Ye][1,1] / Ye[1,1]},
            {2, 2, T[Ye][2,2] / Ye[2,2]},
            {3, 3, T[Ye][3,3] / Ye[3,3]} } },
   {MSOFT, {{1, MassB},
            {2, MassWB},
            {3, MassG},
            {21, mHd2},
            {22, mHu2},
            {31, SignedAbsSqrt[ml2[1,1]]},
            {32, SignedAbsSqrt[ml2[2,2]]},
            {33, SignedAbsSqrt[ml2[3,3]]},
            {34, SignedAbsSqrt[me2[1,1]]},
            {35, SignedAbsSqrt[me2[2,2]]},
            {36, SignedAbsSqrt[me2[3,3]]},
            {41, SignedAbsSqrt[mq2[1,1]]},
            {42, SignedAbsSqrt[mq2[2,2]]},
            {43, SignedAbsSqrt[mq2[3,3]]},
            {44, SignedAbsSqrt[mu2[1,1]]},
            {45, SignedAbsSqrt[mu2[2,2]]},
            {46, SignedAbsSqrt[mu2[3,3]]},
            {47, SignedAbsSqrt[md2[1,1]]},
            {48, SignedAbsSqrt[md2[2,2]]},
            {49, SignedAbsSqrt[md2[3,3]]} } }
};
