// ====================================================================
// This file is part of FlexibleSUSY.
//
// FlexibleSUSY is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// FlexibleSUSY is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with FlexibleSUSY.  If not, see
// <http://www.gnu.org/licenses/>.
// ====================================================================

// File generated at @DateAndTime@

#ifndef @ModelName@_EFFECTIVE_COUPLINGS_H
#define @ModelName@_EFFECTIVE_COUPLINGS_H

#include "@ModelName@_mass_eigenstates.hpp"
#include "lowe.h"

#include <complex>
#include <Eigen/Core>

namespace flexiblesusy {

class @ModelName@_effective_couplings {
public:
   @ModelName@_effective_couplings(const @ModelName@_mass_eigenstates&,
                                   const softsusy::QedQcd&);
   virtual ~@ModelName@_effective_couplings();

   void do_run_couplings(bool flag) { rg_improve = flag; }
   bool do_run_couplings() const { return rg_improve; }
   void set_model(const @ModelName@_mass_eigenstates& model_) { model = model_; }
   void set_low_energy_data(const softsusy::QedQcd& qedqcd_) { qedqcd = qedqcd_; }

@loopCouplingsPrototypes@

private:
   @ModelName@_mass_eigenstates model;
   softsusy::QedQcd qedcd;
   bool rg_improve;
};

} // namespace flexiblesusy

#endif
