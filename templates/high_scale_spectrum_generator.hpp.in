// ====================================================================
// This file is part of FlexibleSUSY.
//
// FlexibleSUSY is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// FlexibleSUSY is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with FlexibleSUSY.  If not, see
// <http://www.gnu.org/licenses/>.
// ====================================================================

// File generated at @DateAndTime@

#ifndef @ModelName@_TWO_SCALE_SPECTRUM_GENERATOR_H
#define @ModelName@_TWO_SCALE_SPECTRUM_GENERATOR_H

#include "@ModelName@_input_parameters.hpp"
#include "@ModelName@_spectrum_generator_interface.hpp"
#include "@ModelName@_spectrum_generator.hpp"
#include "@ModelName@_two_scale_high_scale_constraint.hpp"
#include "@ModelName@_two_scale_susy_scale_constraint.hpp"
#include "@ModelName@_two_scale_low_scale_constraint.hpp"
#include "@ModelName@_two_scale_model.hpp"

#include "lowe.h"

namespace flexiblesusy {

class Two_scale;

template <>
class @ModelName@_spectrum_generator<Two_scale>
   : public @ModelName@_spectrum_generator_interface<@ModelName@<Two_scale> > {
public:
   @ModelName@_spectrum_generator()
      : @ModelName@_spectrum_generator_interface<@ModelName@<Two_scale> >()
      , high_scale_constraint()
      , susy_scale_constraint()
      , low_scale_constraint()
      , high_scale(0.)
      , susy_scale(0.)
      , low_scale(0.)
   {}
   virtual ~@ModelName@_spectrum_generator() {}

   double get_high_scale() const { return high_scale; }
   double get_susy_scale() const { return susy_scale; }
   double get_low_scale()  const { return low_scale;  }

   virtual void run(const softsusy::QedQcd&, const @ModelName@_input_parameters&);
   void write_running_couplings(const std::string& filename = "@ModelName@_rgflow.dat") const;

private:
   @ModelName@_high_scale_constraint<Two_scale> high_scale_constraint;
   @ModelName@_susy_scale_constraint<Two_scale> susy_scale_constraint;
   @ModelName@_low_scale_constraint<Two_scale>  low_scale_constraint;
   double high_scale, susy_scale, low_scale;
};

} // namespace flexiblesusy

#endif
