// ====================================================================
// This file is part of FlexibleSUSY.
//
// FlexibleSUSY is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// FlexibleSUSY is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with FlexibleSUSY.  If not, see
// <http://www.gnu.org/licenses/>.
// ====================================================================

// File generated at @DateAndTime@

#ifndef @ModelName@_LATTICE_LOW_SCALE_CONSTRAINT_H
#define @ModelName@_LATTICE_LOW_SCALE_CONSTRAINT_H

#include "lowe.h"
#include "cextensions.hpp"
#include "@ModelName@_lattice_model.hpp"
#include "@ModelName@_low_scale_constraint.hpp"
#include "@ModelName@_input_parameters.hpp"
#include "lattice_compound_constraint.hpp"
#include "lattice_numerical_constraint.hpp"

namespace flexiblesusy {

template <class T>
class @ModelName@;

class Lattice;

template<class T>
class @ModelName@_lowe_constraint;

template<>
class @ModelName@_lowe_constraint<Lattice> :
  public NumericalConstraint {
public:
  @ModelName@_lowe_constraint(const @ModelName@_input_parameters *);
  virtual ~@ModelName@_lowe_constraint();
  Eigen::ArrayXd cs(const double *x) const;

private:
  double deltaAlphaEm(const @ModelName@<Lattice>::Interactions&,
		      double alphaEm_MSbar) const ATTR(pure);
  double deltaAlphaS (const @ModelName@<Lattice>::Interactions&,
		      double alphaS_MSbar ) const ATTR(pure);

@drbarMassFxnDecls@

  const @ModelName@_input_parameters *input;
  QedQcd oneset;
  size_t threshold_corrections_loop_order;
};

// auxiliary class for initializing own members before the base class
// see http://www.boost.org/doc/libs/1_53_0/libs/utility/base_from_member.html
struct @ModelName@_low_scale_constraint_ {
  @ModelName@_low_scale_constraint_(const @ModelName@_input_parameters *);
  ~@ModelName@_low_scale_constraint_();
  Fixed_t tlow;
  @ModelName@_lowe_constraint<Lattice> low_energy_data;
};

template<>
class @ModelName@_low_scale_constraint<Lattice> :
  public @ModelName@_low_scale_constraint_,
  public CompoundConstraint<Lattice> {
public:
  @ModelName@_low_scale_constraint();
  @ModelName@_low_scale_constraint(const @ModelName@_input_parameters&);
  virtual ~@ModelName@_low_scale_constraint();
};

} // namespace flexiblesusy

#endif
