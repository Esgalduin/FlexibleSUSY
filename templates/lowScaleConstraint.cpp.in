
#include "@ModelName@_lowScaleConstraint.hpp"
#include "@ModelName@_model.hpp"
#include "wrappers.hpp"
#include "logger.hpp"
#include "ew_input.hpp"

#include <cassert>
#include <cmath>

#define INPUTPARAMETER(p) inputPars.p
#define MODELPARAMETER(p) model->get_##p()
#define BETAPARAMETER(p) beta_functions.get_##p()
#define BETA(p) beta_##p
#define SM(p) Electroweak_constants::p

@ModelName@_low_scale_constraint::@ModelName@_low_scale_constraint(const @ModelName@_input_parameters& inputPars_)
   : Constraint<Two_scale>()
   , model(0)
   , inputPars(inputPars_)
{
@scaleGuess@
}

@ModelName@_low_scale_constraint::~@ModelName@_low_scale_constraint()
{
}

void @ModelName@_low_scale_constraint::apply()
{
   assert(model && "Error: @ModelName@_low_scale_constraint:"
          " model pointer must not be zero");

   model->solve_ewsb(0);
   model->calculate_DRbar_parameters();
   update_scale();
   calculate_DRbar_gauge_couplings();
   calculate_DRbar_yukawa_couplings();

   const double MZDRbar
      = model->calculate_Mass@VectorZ@_DRbar_1loop(Electroweak_constants::MZ);
   const double MWDRbar
      = model->calculate_Mass@VectorW@_DRbar_1loop(Electroweak_constants::MW);

@applyConstraint@
}

double @ModelName@_low_scale_constraint::get_scale() const
{
   return scale;
}

void @ModelName@_low_scale_constraint::set_model(Two_scale_model* model_)
{
   model = cast_model<@ModelName@>(model_);
}

void @ModelName@_low_scale_constraint::update_scale()
{
@calculateScale@
}

void @ModelName@_low_scale_constraint::calculate_DRbar_gauge_couplings()
{
   const double currentScale = model->displayMu();
   static const double oneOver16PiSqr = 1./(16. * M_PI * M_PI);

@setDRbarGaugeCouplings@
}

void @ModelName@_low_scale_constraint::calculate_DRbar_yukawa_couplings()
{
   Eigen::Matrix<double,3,3> topDRbar(3,3), bottomDRbar(3,3),  electronDRbar(3,3);
   topDRbar(0,0)      = model->calculate_Mass@TopQuark@_DRbar_1loop(Electroweak_constants::MUP, 1);
   topDRbar(1,1)      = model->calculate_Mass@TopQuark@_DRbar_1loop(Electroweak_constants::MCHARM, 2);
   topDRbar(2,2)      = model->calculate_Mass@TopQuark@_DRbar_1loop(Electroweak_constants::PMTOP, 3);
   bottomDRbar(0,0)   = model->calculate_Mass@BottomQuark@_DRbar_1loop(Electroweak_constants::MDOWN, 1);
   bottomDRbar(1,1)   = model->calculate_Mass@BottomQuark@_DRbar_1loop(Electroweak_constants::MSTRANGE, 2);
   bottomDRbar(2,2)   = model->calculate_Mass@BottomQuark@_DRbar_1loop(Electroweak_constants::PMBOTTOM, 3);
   electronDRbar(0,0) = model->calculate_Mass@Electron@_DRbar_1loop(Electroweak_constants::MELECTRON, 1);
   electronDRbar(1,1) = model->calculate_Mass@Electron@_DRbar_1loop(Electroweak_constants::MMUON, 2);
   electronDRbar(2,2) = model->calculate_Mass@Electron@_DRbar_1loop(Electroweak_constants::MTAU, 3);

@setDRbarYukawaCouplings@
}
