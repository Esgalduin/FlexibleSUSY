DIR          := @DIR@
MODNAME      := lib@MODEL@

LIB@MODEL@_SRC := 

ifneq ($(findstring two_scale,$(ALGORITHMS)),)
LIB@MODEL@_SRC += \
		$(DIR)/@MODEL@_convergence_tester.cpp \
		$(DIR)/@MODEL@_high_scale_constraint.cpp \
		$(DIR)/@MODEL@_initial_guesser.cpp \
		$(DIR)/@MODEL@_low_scale_constraint.cpp \
		$(DIR)/@MODEL@_model.cpp \
		$(DIR)/@MODEL@_physical.cpp \
		$(DIR)/run_@MODEL@.cpp \
		$(DIR)/@MODEL@_susy_parameters.cpp \
		$(DIR)/@MODEL@_soft_parameters.cpp \
		$(DIR)/@MODEL@_susy_scale_constraint.cpp \
		$(DIR)/@MODEL@_utilities.cpp
endif

LIB@MODEL@_OBJ := \
		$(patsubst %.cpp, %.o, $(filter %.cpp, $(LIB@MODEL@_SRC))) \
		$(patsubst %.f, %.o, $(filter %.f, $(LIB@MODEL@_SRC)))

LIB@MODEL@_DEP := \
		$(LIB@MODEL@_OBJ:.o=.d)

$(LIB@MODEL@_DEP) $(LIB@MODEL@_OBJ): CPPFLAGS += $(GSLFLAGS)

LIB@MODEL@     := $(DIR)/$(MODNAME)$(LIBEXT)

RUN_@MODEL@_EXE := $(DIR)/run_@MODEL@.x

.PHONY:         all-$(MODNAME) clean-$(MODNAME) distclean-$(MODNAME)

all-$(MODNAME): $(LIB@MODEL@)

clean-$(MODNAME):
		rm -rf $(LIB@MODEL@_OBJ)

distclean-$(MODNAME): clean-$(MODNAME)
		rm -rf $(LIB@MODEL@_DEP)
		rm -rf $(LIB@MODEL@)

clean::         clean-$(MODNAME)

distclean::     distclean-$(MODNAME)

$(DIR)/@MODEL@_susy_parameters.hpp: $(DIR)/start.m $(META_SRC) $(TEMPLATES)
	$(MATH) -run "Get[\"$<\"]; Quit[]"

$(DIR)/@MODEL@_susy_parameters.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_soft_parameters.hpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_soft_parameters.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_physical.hpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_physical.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_model.hpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_model.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/run_@MODEL@.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_high_scale_constraint.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_susy_scale_constraint.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_low_scale_constraint.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_convergence_tester.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_initial_guesser.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_utilities.hpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(DIR)/@MODEL@_utilities.cpp: $(DIR)/@MODEL@_susy_parameters.hpp
	true

$(LIB@MODEL@_DEP) $(LIB@MODEL@_OBJ) $(DIR)/run_@MODEL@.o: CPPFLAGS += $(EIGENFLAGS)

$(LIB@MODEL@): $(LIB@MODEL@_OBJ)
		$(MAKELIB) $@ $^

ifeq ($(ENABLE_LOOPTOOLS),yes)
$(LIB@MODEL@_OBJ) $(LIB@MODEL@_DEP): CPPFLAGS += $(LOOPTOOLSFLAGS)
endif

$(RUN_@MODEL@_EXE): $(DIR)/run_@MODEL@.o $(LIB@MODEL@) $(LIBFLEXI) $(LIBLEGACY)
		$(CXX) -o $@ $^ $(GSLLIBS) $(FLIBS) $(LOOPTOOLSLIBS)

ALLDEP += $(LIB@MODEL@_DEP)
ALLLIB += $(LIB@MODEL@)
ALLEXE += $(RUN_@MODEL@_EXE)
