
#include "susyScaleConstraint.hpp"
#include "model.hpp"
#include "wrappers.hpp"
#include "logger.hpp"

#include <cassert>
#include <cmath>

#define INPUTPARAMETER(p) inputPars.p
#define MODELPARAMETER(p) model->get_##p()
#define BETAPARAMETER(p) beta_functions.get_##p()
#define BETA(p) beta_##p

@ModelName@_susy_scale_constraint::@ModelName@_susy_scale_constraint(const @ModelName@_input_parameters& inputPars_)
   : model(0)
   , inputPars(inputPars_)
{
@scaleGuess@
}

@ModelName@_susy_scale_constraint::~@ModelName@_susy_scale_constraint()
{
}

void @ModelName@_susy_scale_constraint::apply()
{
   assert(model && "Error: susy scale constraint: model pointer must"
          " not be zero");

   model->calculate_DRbar_parameters();
   update_scale();
   model->solve_ewsb();

@applyConstraint@
}

double @ModelName@_susy_scale_constraint::get_scale() const
{
   return scale;
}

void @ModelName@_susy_scale_constraint::set_model(@ModelName@* model_)
{
   model = model_;
}

void @ModelName@_susy_scale_constraint::update_scale()
{
@calculateScale@
}
