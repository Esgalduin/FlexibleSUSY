(* :Copyright:

   ====================================================================
   This file is part of FlexibleSUSY.

   FlexibleSUSY is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published
   by the Free Software Foundation, either version 3 of the License,
   or (at your option) any later version.

   FlexibleSUSY is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with FlexibleSUSY.  If not, see
   <http://www.gnu.org/licenses/>.
   ====================================================================

*)

Print["Checking some vertex expressions generated by CXXDiagrams... "];

Needs["SARAH`"];
Needs["FlexibleSUSY`"];
Needs["Utils`"];

workingDirectory = Directory[];
SARAH`SARAH[OutputDirectory] = FileNameJoin[{workingDirectory, "Output"}];
SARAH`SARAH[InputDirectories] = {
    FileNameJoin[{workingDirectory, "sarah"}],
    ToFileName[{$sarahDir, "Models"}]
};

Start["SM"];

modelFile = FileNameJoin[{workingDirectory, "models", "SM", "FlexibleSUSY.m"}];

FlexibleSUSY`LoadModelFile[modelFile];
{susyBetaFunctions, susyBreakingBetaFunctions} = FlexibleSUSY`ReadSARAHBetaFunctions[];
allParameters = FlexibleSUSY`SetupModelParameters[susyBetaFunctions, susyBreakingBetaFunctions];

{massMatrices, Lat$massMatrices} = FlexibleSUSY`SetupMassMatrices[allParameters];
FlexibleSUSY`SetupOutputParameters[massMatrices];

templateCode = StringJoin @ Riffle[Utils`ReadLinesInFile[
		FileNameJoin[{workingDirectory, "test", "test_SM_cxxdiagrams.cpp.in"}]],
	"\n"];

VectorToGhost[field_ ? TreeMasses`IsVector] :=
	Symbol[StringReplace[SymbolName[field], "V" ~~ name_ :> "g" <> name]];

(* Zero vertices are handled differently by CXXDiagrams. Hence we test
 * them separately.
 *)
zeroVertices = {
	(* The SM has no zero SSS vertices *)
	{CXXDiagrams`LorentzConjugate[VectorToGhost[TreeMasses`GetGluon[]]],
		VectorToGhost[TreeMasses`GetGluon[]], TreeMasses`GetHiggsBoson[]},
	{CXXDiagrams`LorentzConjugate[VectorToGhost[TreeMasses`GetGluon[]]],
		VectorToGhost[TreeMasses`GetGluon[]], TreeMasses`GetZBoson[]},
	{TreeMasses`GetZBoson[], TreeMasses`GetZBoson[], TreeMasses`GetZBoson[]},
	{TreeMasses`GetZBoson[], TreeMasses`GetZBoson[],
		TreeMasses`GetZBoson[], TreeMasses`GetZBoson[]},
	(* The SM has no zero SSSS vertices *)
	{CXXDiagrams`LorentzConjugate[CXXDiagrams`AtomHead[TreeMasses`GetSMNeutrino1[]]],
		CXXDiagrams`AtomHead[TreeMasses`GetSMNeutrino1[]],
		TreeMasses`GetHiggsBoson[]},
	{CXXDiagrams`LorentzConjugate[CXXDiagrams`AtomHead[TreeMasses`GetSMNeutrino1[]]],
		CXXDiagrams`AtomHead[TreeMasses`GetSMNeutrino1[]],
		TreeMasses`GetGluon[]},
	{TreeMasses`GetHiggsBoson[], TreeMasses`GetHiggsBoson[], TreeMasses`GetGluon[]},
	{TreeMasses`GetHiggsBoson[], TreeMasses`GetGluon[], TreeMasses`GetGluon[]},
	{TreeMasses`GetHiggsBoson[], TreeMasses`GetHiggsBoson[],
		TreeMasses`GetGluon[], TreeMasses`GetGluon[]}
};

nonzeroVertices = {
	{TreeMasses`GetHiggsBoson[], TreeMasses`GetHiggsBoson[], TreeMasses`GetHiggsBoson[]},
	{CXXDiagrams`LorentzConjugate[VectorToGhost[TreeMasses`GetWBoson[]]],
		VectorToGhost[TreeMasses`GetWBoson[]], TreeMasses`GetHiggsBoson[]},
	{CXXDiagrams`LorentzConjugate[VectorToGhost[TreeMasses`GetWBoson[]]],
		VectorToGhost[TreeMasses`GetWBoson[]], TreeMasses`GetZBoson[]},
	{TreeMasses`GetWBoson[], CXXDiagrams`LorentzConjugate[TreeMasses`GetWBoson[]],
		TreeMasses`GetZBoson[]},
	{TreeMasses`GetWBoson[], CXXDiagrams`LorentzConjugate[TreeMasses`GetWBoson[]],
		TreeMasses`GetZBoson[], TreeMasses`GetZBoson[]},
	{TreeMasses`GetHiggsBoson[], TreeMasses`GetHiggsBoson[],
		TreeMasses`GetHiggsBoson[], TreeMasses`GetHiggsBoson[]},
	{CXXDiagrams`LorentzConjugate[CXXDiagrams`AtomHead[TreeMasses`GetSMTauLepton[]]],
		CXXDiagrams`AtomHead[TreeMasses`GetSMTauLepton[]],
		TreeMasses`GetHiggsBoson[]},
	{CXXDiagrams`LorentzConjugate[CXXDiagrams`AtomHead[TreeMasses`GetSMTauLepton[]]],
		CXXDiagrams`AtomHead[TreeMasses`GetSMTauLepton[]],
		TreeMasses`GetPhoton[]},
	(* The SM has no nonzer SSV vertices *)
	{TreeMasses`GetHiggsBoson[], TreeMasses`GetZBoson[], TreeMasses`GetZBoson[]},
	{TreeMasses`GetHiggsBoson[], TreeMasses`GetHiggsBoson[],
		TreeMasses`GetZBoson[], TreeMasses`GetZBoson[]}
};

cxxZeroVertices = "boost::mpl::vector<" <>
	StringJoin[Riffle[CXXNameOfVertex /@ zeroVertices, ", "]] <> ">";

cxxDiagramsDir = FileNameJoin[{SARAH`SARAH[OutputDirectory],
	ToString[FlexibleSUSY`FSEigenstates], "CXXDiagrams"}];
createdVerticesFile = FileNameJoin[{cxxDiagramsDir, "CreatedVertices.m"}];
    
createdVertices = If[FileExistsQ[cxxDiagramsDir] === True,
	Get[cxxDiagramsDir], {}];

remainingVertices = Complement[Join[zeroVertices, nonzeroVertices], createdVertices];

vertexDataCode = StringJoin @ Riffle[
	CXXDiagrams`CreateVertexData /@ remainingVertices, "\n\n"];
verticesCode = CXXDiagrams`CreateVertices[remainingVertices];

code = StringReplace[templateCode, {
	"@ZERO_VERTICES@" -> cxxZeroVertices,
	"@CXXDiagrams_VertexData@" -> vertexDataCode,
	"@CXXDiagrams_Vertices@" -> verticesCode
}];

fileHandle = OpenWrite[FileNameJoin[{workingDirectory, "test", "test_SM_cxxdiagrams.cpp"}]];
WriteString[fileHandle, code];
Close[fileHandle];
